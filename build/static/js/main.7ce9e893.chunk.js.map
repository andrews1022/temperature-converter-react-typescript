{"version":3,"sources":["components/Header.tsx","components/TempInput.tsx","components/TempReset.tsx","components/TempCalc.tsx","App.tsx","index.tsx"],"names":["Header","title","className","TempInput","type","value","convertTemp","name","id","onChange","TempReset","buttonText","resetTemps","onClick","TempCalc","useState","celsius","fahrenheit","kelvin","temp","updateTemp","e","target","toFixed","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAQeA,EAFiB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAAe,wBAAIC,UAAU,iBAAiBD,I,OCqB/DE,EAnBoB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YACjD,OACE,yBAAKJ,UAAU,eACb,2BAAOA,UAAU,eAAeE,GAChC,yBAAKF,UAAU,iBACb,2BACEA,UAAU,cACVE,KAAK,SACLG,KAAI,UAAKH,EAAL,UACJI,GAAE,UAAKJ,EAAL,UACFC,MAAOA,EACPI,SAAUH,IAEZ,0BAAMJ,UAAU,kBCRTQ,EANoB,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,WAAf,OACjC,4BAAQV,UAAU,YAAYW,QAASD,GACpCD,ICyCUG,EAxCY,WAAO,IAAD,EACJC,oBAAuB,iBAAO,CACvDC,QAAS,EACTC,WAAY,EACZC,OAAQ,MAJqB,mBACxBC,EADwB,KAClBC,EADkB,KA8B/B,OACE,yBAAKlB,UAAU,cACb,kBAAC,EAAD,CAAWE,KAAK,UAAUC,MAAOc,EAAKH,QAASV,YAzBxB,SAACe,GAAD,OACzBD,EAAW,CACTJ,SAAUK,EAAEC,OAAOjB,MACnBY,aAAgC,KAAjBI,EAAEC,OAAOjB,MAAc,IAAIkB,QAAQ,GAClDL,UAAWG,EAAEC,OAAOjB,MAAQ,QAAQkB,QAAQ,QAsB5C,kBAAC,EAAD,CAAWnB,KAAK,aAAaC,MAAOc,EAAKF,WAAYX,YAnB3B,SAACe,GAAD,OAC5BD,EAAW,CACTJ,YAAaK,EAAEC,OAAOjB,MAAQ,IAAM,KAAKkB,QAAQ,GACjDN,YAAaI,EAAEC,OAAOjB,MACtBa,WAAYG,EAAEC,OAAOjB,MAAQ,IAAM,IAAM,QAAQkB,QAAQ,QAgBzD,kBAAC,EAAD,CAAWnB,KAAK,SAASC,MAAOc,EAAKD,OAAQZ,YAbvB,SAACe,GAAD,OACxBD,EAAW,CACTJ,WAAYK,EAAEC,OAAOjB,MAAQ,QAAQkB,QAAQ,GAC7CN,aAA2C,MAA3BI,EAAEC,OAAOjB,MAAQ,QAAgB,IAAIkB,QAAQ,GAC7DL,QAASG,EAAEC,OAAOjB,WAUlB,kBAAC,EAAD,CAAWM,WAAW,QAAQC,WAPf,kBAAYQ,EAAW,CAAEJ,QAAS,EAAGC,WAAY,EAAGC,OAAQ,S,KCxBlEM,MATf,WACE,OACE,yBAAKtB,UAAU,QACb,kBAAC,EAAD,CAAQD,MAAM,0BACd,kBAAC,EAAD,QCLNwB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.7ce9e893.chunk.js","sourcesContent":["import React from 'react';\r\n\r\ninterface Props {\r\n  title: string;\r\n}\r\n\r\nconst Header: React.FC<Props> = ({ title }) => <h1 className='temp__heading'>{title}</h1>;\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\ninterface Props {\r\n  type: string;\r\n  value: number;\r\n  convertTemp: (event: React.ChangeEvent<HTMLInputElement>) => void | undefined;\r\n}\r\n\r\nconst TempInput: React.FC<Props> = ({ type, value, convertTemp }) => {\r\n  return (\r\n    <div className='temp__group'>\r\n      <label className='temp__label'>{type}</label>\r\n      <div className='temp__wrapper'>\r\n        <input\r\n          className='temp__input'\r\n          type='number'\r\n          name={`${type}-input`}\r\n          id={`${type}-input`}\r\n          value={value}\r\n          onChange={convertTemp}\r\n        />\r\n        <span className='temp__span'></span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TempInput;\r\n","import React from 'react';\r\n\r\ninterface Props {\r\n  buttonText: string;\r\n  resetTemps: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void | undefined;\r\n}\r\n\r\nconst TempReset: React.FC<Props> = ({ buttonText, resetTemps }) => (\r\n  <button className='temp__btn' onClick={resetTemps}>\r\n    {buttonText}\r\n  </button>\r\n);\r\n\r\nexport default TempReset;\r\n","import React, { useState } from 'react';\r\nimport TempInput from './TempInput';\r\nimport TempReset from './TempReset';\r\n\r\ninterface Temperatures {\r\n  celsius: number;\r\n  fahrenheit: number;\r\n  kelvin: number;\r\n}\r\n\r\nconst TempCalc: React.FC = () => {\r\n  const [temp, updateTemp] = useState<Temperatures>(() => ({\r\n    celsius: 0,\r\n    fahrenheit: 0,\r\n    kelvin: 0,\r\n  }));\r\n\r\n  const convertFromCelsius = (e: { target: { value: React.ReactText } }) =>\r\n    updateTemp({\r\n      celsius: +e.target.value,\r\n      fahrenheit: +(+e.target.value * 1.8 + 32).toFixed(2),\r\n      kelvin: +(+e.target.value + 273.15).toFixed(2),\r\n    });\r\n\r\n  const convertFromFahrenheit = (e: { target: { value: React.ReactText } }) =>\r\n    updateTemp({\r\n      celsius: +((+e.target.value - 32) / 1.8).toFixed(2),\r\n      fahrenheit: +e.target.value,\r\n      kelvin: +((+e.target.value - 32) / 1.8 + 273.15).toFixed(2),\r\n    });\r\n\r\n  const convertFromKelvin = (e: { target: { value: React.ReactText } }) =>\r\n    updateTemp({\r\n      celsius: +(+e.target.value - 273.15).toFixed(2),\r\n      fahrenheit: +((+e.target.value - 273.15) * 1.8 + 32).toFixed(2),\r\n      kelvin: +e.target.value,\r\n    });\r\n\r\n  const resetTemps = (): void => updateTemp({ celsius: 0, fahrenheit: 0, kelvin: 0 });\r\n\r\n  return (\r\n    <div className='temp__calc'>\r\n      <TempInput type='celsius' value={temp.celsius} convertTemp={convertFromCelsius} />\r\n      <TempInput type='fahrenheit' value={temp.fahrenheit} convertTemp={convertFromFahrenheit} />\r\n      <TempInput type='kelvin' value={temp.kelvin} convertTemp={convertFromKelvin} />\r\n      <TempReset buttonText='reset' resetTemps={resetTemps} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TempCalc;\r\n","import React from 'react';\nimport Header from './components/Header';\nimport TempCalc from './components/TempCalc';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className='temp'>\n      <Header title='temperature converter' />\n      <TempCalc />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}